{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { NavigationHelpersContext, useTheme } from '@react-navigation/native';\nimport { ScreenContainer } from 'react-native-screens';\nimport SafeAreaProviderCompat, { initialSafeAreaInsets } from \"./SafeAreaProviderCompat\";\nimport ResourceSavingScene from \"./ResourceSavingScene\";\nimport BottomTabBar, { getTabBarHeight } from \"./BottomTabBar\";\nimport BottomTabBarHeightCallbackContext from \"../utils/BottomTabBarHeightCallbackContext\";\nimport BottomTabBarHeightContext from \"../utils/BottomTabBarHeightContext\";\nfunction SceneContent(_ref) {\n  var isFocused = _ref.isFocused,\n    children = _ref.children,\n    style = _ref.style;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  return React.createElement(View, {\n    accessibilityElementsHidden: !isFocused,\n    importantForAccessibility: isFocused ? 'auto' : 'no-hide-descendants',\n    style: [styles.content, {\n      backgroundColor: colors.background\n    }, style]\n  }, children);\n}\nvar BottomTabView = function (_React$Component) {\n  _inherits(BottomTabView, _React$Component);\n  var _super = _createSuper(BottomTabView);\n  function BottomTabView(_props) {\n    var _this;\n    _classCallCheck(this, BottomTabView);\n    _this = _super.call(this, _props);\n    _defineProperty(_assertThisInitialized(_this), \"renderTabBar\", function () {\n      var _this$props = _this.props,\n        _this$props$tabBar = _this$props.tabBar,\n        tabBar = _this$props$tabBar === void 0 ? function (props) {\n          return React.createElement(BottomTabBar, props);\n        } : _this$props$tabBar,\n        tabBarOptions = _this$props.tabBarOptions,\n        state = _this$props.state,\n        navigation = _this$props.navigation,\n        descriptors = _this$props.descriptors;\n      return tabBar(_objectSpread(_objectSpread({}, tabBarOptions), {}, {\n        state: state,\n        descriptors: descriptors,\n        navigation: navigation\n      }));\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleTabBarHeightChange\", function (height) {\n      _this.setState(function (state) {\n        if (state.tabBarHeight !== height) {\n          return {\n            tabBarHeight: height\n          };\n        }\n        return null;\n      });\n    });\n    var _this$props2 = _this.props,\n      _state = _this$props2.state,\n      _tabBarOptions = _this$props2.tabBarOptions;\n    var dimensions = Dimensions.get('window');\n    var tabBarHeight = getTabBarHeight({\n      state: _state,\n      dimensions: dimensions,\n      layout: {\n        width: dimensions.width,\n        height: 0\n      },\n      insets: initialSafeAreaInsets,\n      adaptive: _tabBarOptions === null || _tabBarOptions === void 0 ? void 0 : _tabBarOptions.adaptive,\n      labelPosition: _tabBarOptions === null || _tabBarOptions === void 0 ? void 0 : _tabBarOptions.labelPosition,\n      tabStyle: _tabBarOptions === null || _tabBarOptions === void 0 ? void 0 : _tabBarOptions.tabStyle,\n      style: _tabBarOptions === null || _tabBarOptions === void 0 ? void 0 : _tabBarOptions.style\n    });\n    _this.state = {\n      loaded: [_state.routes[_state.index].key],\n      tabBarHeight: tabBarHeight\n    };\n    return _this;\n  }\n  _createClass(BottomTabView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n        state = _this$props3.state,\n        descriptors = _this$props3.descriptors,\n        navigation = _this$props3.navigation,\n        lazy = _this$props3.lazy,\n        _this$props3$detachIn = _this$props3.detachInactiveScreens,\n        detachInactiveScreens = _this$props3$detachIn === void 0 ? true : _this$props3$detachIn,\n        sceneContainerStyle = _this$props3.sceneContainerStyle;\n      var routes = state.routes;\n      var _this$state = this.state,\n        loaded = _this$state.loaded,\n        tabBarHeight = _this$state.tabBarHeight;\n      return React.createElement(NavigationHelpersContext.Provider, {\n        value: navigation\n      }, React.createElement(SafeAreaProviderCompat, null, React.createElement(ScreenContainer, {\n        enabled: detachInactiveScreens,\n        style: styles.container\n      }, routes.map(function (route, index) {\n        var descriptor = descriptors[route.key];\n        var unmountOnBlur = descriptor.options.unmountOnBlur;\n        var isFocused = state.index === index;\n        if (unmountOnBlur && !isFocused) {\n          return null;\n        }\n        if (lazy && !loaded.includes(route.key) && !isFocused) {\n          return null;\n        }\n        return React.createElement(ResourceSavingScene, {\n          key: route.key,\n          style: StyleSheet.absoluteFill,\n          isVisible: isFocused,\n          enabled: detachInactiveScreens\n        }, React.createElement(SceneContent, {\n          isFocused: isFocused,\n          style: sceneContainerStyle\n        }, React.createElement(BottomTabBarHeightContext.Provider, {\n          value: tabBarHeight\n        }, descriptor.render())));\n      })), React.createElement(BottomTabBarHeightCallbackContext.Provider, {\n        value: this.handleTabBarHeightChange\n      }, this.renderTabBar())));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var focusedRouteKey = nextProps.state.routes[nextProps.state.index].key;\n      return {\n        loaded: prevState.loaded.includes(focusedRouteKey) ? prevState.loaded : [].concat(_toConsumableArray(prevState.loaded), [focusedRouteKey])\n      };\n    }\n  }]);\n  return BottomTabView;\n}(React.Component);\nexport { BottomTabView as default };\n_defineProperty(BottomTabView, \"defaultProps\", {\n  lazy: true\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  content: {\n    flex: 1\n  }\n});","map":{"version":3,"mappings":"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","names":["React","NavigationHelpersContext","useTheme","ScreenContainer","SafeAreaProviderCompat","initialSafeAreaInsets","ResourceSavingScene","BottomTabBar","getTabBarHeight","BottomTabBarHeightCallbackContext","BottomTabBarHeightContext","SceneContent","isFocused","children","style","colors","View","accessibilityElementsHidden","importantForAccessibility","styles","content","backgroundColor","background","BottomTabView","constructor","props","_defineProperty","tabBar","tabBarOptions","state","navigation","descriptors","height","setState","tabBarHeight","dimensions","Dimensions","get","layout","width","insets","adaptive","labelPosition","tabStyle","loaded","routes","index","key","render","lazy","detachInactiveScreens","sceneContainerStyle","Provider","value","enabled","container","map","route","descriptor","unmountOnBlur","options","includes","StyleSheet","absoluteFill","isVisible","handleTabBarHeightChange","renderTabBar","nextProps","prevState","focusedRouteKey","Component","create","flex","overflow"],"sources":["BottomTabView.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  Dimensions,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  NavigationHelpersContext,\n  ParamListBase,\n  TabNavigationState,\n  useTheme,\n} from '@react-navigation/native';\nimport { ScreenContainer } from 'react-native-screens';\n\nimport SafeAreaProviderCompat, {\n  initialSafeAreaInsets,\n} from './SafeAreaProviderCompat';\nimport ResourceSavingScene from './ResourceSavingScene';\nimport BottomTabBar, { getTabBarHeight } from './BottomTabBar';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport BottomTabBarHeightContext from '../utils/BottomTabBarHeightContext';\nimport type {\n  BottomTabNavigationConfig,\n  BottomTabDescriptorMap,\n  BottomTabNavigationHelpers,\n  BottomTabBarProps,\n} from '../types';\n\ntype Props = BottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: BottomTabNavigationHelpers;\n  descriptors: BottomTabDescriptorMap;\n};\n\ntype State = {\n  loaded: string[];\n  tabBarHeight: number;\n};\n\nfunction SceneContent({\n  isFocused,\n  children,\n  style,\n}: {\n  isFocused: boolean;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n}) {\n  const { colors } = useTheme();\n\n  return (\n    <View\n      accessibilityElementsHidden={!isFocused}\n      importantForAccessibility={isFocused ? 'auto' : 'no-hide-descendants'}\n      style={[styles.content, { backgroundColor: colors.background }, style]}\n    >\n      {children}\n    </View>\n  );\n}\n\nexport default class BottomTabView extends React.Component<Props, State> {\n  static defaultProps = {\n    lazy: true,\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    const focusedRouteKey = nextProps.state.routes[nextProps.state.index].key;\n\n    return {\n      // Set the current tab to be loaded if it was not loaded before\n      loaded: prevState.loaded.includes(focusedRouteKey)\n        ? prevState.loaded\n        : [...prevState.loaded, focusedRouteKey],\n    };\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    const { state, tabBarOptions } = this.props;\n\n    const dimensions = Dimensions.get('window');\n    const tabBarHeight = getTabBarHeight({\n      state,\n      dimensions,\n      layout: { width: dimensions.width, height: 0 },\n      insets: initialSafeAreaInsets,\n      adaptive: tabBarOptions?.adaptive,\n      labelPosition: tabBarOptions?.labelPosition,\n      tabStyle: tabBarOptions?.tabStyle,\n      style: tabBarOptions?.style,\n    });\n\n    this.state = {\n      loaded: [state.routes[state.index].key],\n      tabBarHeight: tabBarHeight,\n    };\n  }\n\n  private renderTabBar = () => {\n    const {\n      tabBar = (props: BottomTabBarProps) => <BottomTabBar {...props} />,\n      tabBarOptions,\n      state,\n      navigation,\n      descriptors,\n    } = this.props;\n    return tabBar({\n      ...tabBarOptions,\n      state: state,\n      descriptors: descriptors,\n      navigation: navigation,\n    });\n  };\n\n  private handleTabBarHeightChange = (height: number) => {\n    this.setState((state) => {\n      if (state.tabBarHeight !== height) {\n        return { tabBarHeight: height };\n      }\n\n      return null;\n    });\n  };\n\n  render() {\n    const {\n      state,\n      descriptors,\n      navigation,\n      lazy,\n      detachInactiveScreens = true,\n      sceneContainerStyle,\n    } = this.props;\n    const { routes } = state;\n    const { loaded, tabBarHeight } = this.state;\n\n    return (\n      <NavigationHelpersContext.Provider value={navigation}>\n        <SafeAreaProviderCompat>\n          <ScreenContainer\n            // @ts-ignore\n            enabled={detachInactiveScreens}\n            style={styles.container}\n          >\n            {routes.map((route, index) => {\n              const descriptor = descriptors[route.key];\n              const { unmountOnBlur } = descriptor.options;\n              const isFocused = state.index === index;\n\n              if (unmountOnBlur && !isFocused) {\n                return null;\n              }\n\n              if (lazy && !loaded.includes(route.key) && !isFocused) {\n                // Don't render a screen if we've never navigated to it\n                return null;\n              }\n\n              return (\n                <ResourceSavingScene\n                  key={route.key}\n                  style={StyleSheet.absoluteFill}\n                  isVisible={isFocused}\n                  enabled={detachInactiveScreens}\n                >\n                  <SceneContent\n                    isFocused={isFocused}\n                    style={sceneContainerStyle}\n                  >\n                    <BottomTabBarHeightContext.Provider value={tabBarHeight}>\n                      {descriptor.render()}\n                    </BottomTabBarHeightContext.Provider>\n                  </SceneContent>\n                </ResourceSavingScene>\n              );\n            })}\n          </ScreenContainer>\n          <BottomTabBarHeightCallbackContext.Provider\n            value={this.handleTabBarHeightChange}\n          >\n            {this.renderTabBar()}\n          </BottomTabBarHeightCallbackContext.Provider>\n        </SafeAreaProviderCompat>\n      </NavigationHelpersContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  content: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}