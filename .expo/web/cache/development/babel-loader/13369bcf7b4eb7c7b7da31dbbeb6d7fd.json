{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  height = _Dimensions$get.height,\n  width = _Dimensions$get.width;\nvar CardStack = function (_Component) {\n  _inherits(CardStack, _Component);\n  var _super = _createSuper(CardStack);\n  function CardStack(props) {\n    var _this;\n    _classCallCheck(this, CardStack);\n    _this = _super.call(this, props);\n    _this.state = {\n      drag: new Animated.ValueXY({\n        x: 0,\n        y: 0\n      }),\n      dragDistance: new Animated.Value(0),\n      sindex: 0,\n      cardA: null,\n      cardB: null,\n      topCard: 'cardA',\n      cards: [],\n      touchStart: 0\n    };\n    _this.distance = _this.constructor.distance;\n    _this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n        return false;\n      },\n      onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, gestureState) {\n        return false;\n      },\n      onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n        var isVerticalSwipe = Math.sqrt(Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2));\n        if (!_this.props.verticalSwipe && isVerticalSwipe) {\n          return false;\n        }\n        return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10;\n      },\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n        var isVerticalSwipe = Math.sqrt(Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2));\n        if (!_this.props.verticalSwipe && isVerticalSwipe) {\n          return false;\n        }\n        return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10;\n      },\n      onPanResponderGrant: function onPanResponderGrant(evt, gestureState) {\n        _this.props.onSwipeStart();\n        _this.setState({\n          touchStart: new Date().getTime()\n        });\n      },\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n        var movedX = gestureState.moveX - gestureState.x0;\n        var movedY = gestureState.moveY - gestureState.y0;\n        _this.props.onSwipe(movedX, movedY);\n        var _this$props = _this.props,\n          verticalSwipe = _this$props.verticalSwipe,\n          horizontalSwipe = _this$props.horizontalSwipe;\n        var dragDistance = _this.distance(horizontalSwipe ? gestureState.dx : 0, verticalSwipe ? gestureState.dy : 0);\n        _this.state.dragDistance.setValue(dragDistance);\n        _this.state.drag.setValue({\n          x: horizontalSwipe ? gestureState.dx : 0,\n          y: verticalSwipe ? gestureState.dy : 0\n        });\n      },\n      onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {\n        return true;\n      },\n      onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n        _this.props.onSwipeEnd();\n        var currentTime = new Date().getTime();\n        var swipeDuration = currentTime - _this.state.touchStart;\n        var _this$props2 = _this.props,\n          verticalThreshold = _this$props2.verticalThreshold,\n          horizontalThreshold = _this$props2.horizontalThreshold,\n          disableTopSwipe = _this$props2.disableTopSwipe,\n          disableLeftSwipe = _this$props2.disableLeftSwipe,\n          disableRightSwipe = _this$props2.disableRightSwipe,\n          disableBottomSwipe = _this$props2.disableBottomSwipe;\n        if ((Math.abs(gestureState.dx) > horizontalThreshold || Math.abs(gestureState.dx) > horizontalThreshold * 0.6 && swipeDuration < 150) && _this.props.horizontalSwipe) {\n          var swipeDirection = gestureState.dx < 0 ? width * -1.5 : width * 1.5;\n          if (swipeDirection < 0 && !disableLeftSwipe) {\n            _this._nextCard('left', swipeDirection, gestureState.dy, _this.props.duration);\n          } else if (swipeDirection > 0 && !disableRightSwipe) {\n            _this._nextCard('right', swipeDirection, gestureState.dy, _this.props.duration);\n          } else {\n            _this._resetCard();\n          }\n        } else if ((Math.abs(gestureState.dy) > verticalThreshold || Math.abs(gestureState.dy) > verticalThreshold * 0.8 && swipeDuration < 150) && _this.props.verticalSwipe) {\n          var _swipeDirection = gestureState.dy < 0 ? height * -1 : height;\n          if (_swipeDirection < 0 && !disableTopSwipe) {\n            _this._nextCard('top', gestureState.dx, _swipeDirection, _this.props.duration);\n          } else if (_swipeDirection > 0 && !disableBottomSwipe) {\n            _this._nextCard('bottom', gestureState.dx, _swipeDirection, _this.props.duration);\n          } else {\n            _this._resetCard();\n          }\n        } else {\n          _this._resetCard();\n        }\n      },\n      onPanResponderTerminate: function onPanResponderTerminate(evt, gestureState) {},\n      onShouldBlockNativeResponder: function onShouldBlockNativeResponder(evt, gestureState) {\n        return true;\n      }\n    });\n    return _this;\n  }\n  _createClass(CardStack, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (typeof this.props.children === 'undefined') return;\n      if (!this._isSameChildren(this.props.children, prevProps.children)) {\n        var children = Array.isArray(this.props.children) ? this.props.children : [this.props.children];\n        var aIndex = this.state.topCard == 'cardA' ? this._getIndex(this.state.sindex - 2, children.length) : this._getIndex(this.state.sindex - 1, children.length);\n        var bIndex = this.state.topCard == 'cardB' ? this._getIndex(this.state.sindex - 2, children.length) : this._getIndex(this.state.sindex - 1, children.length);\n        this.setState({\n          cards: children,\n          cardA: children[aIndex] || null,\n          cardB: children[bIndex] || null\n        });\n      }\n    }\n  }, {\n    key: \"_getIndex\",\n    value: function _getIndex(index, cards) {\n      return this.props.loop ? this.mod(index, cards) : index;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initDeck();\n    }\n  }, {\n    key: \"_isSameChildren\",\n    value: function _isSameChildren(a, b) {\n      if (typeof a != typeof b) return false;\n      if (typeof a === 'undefined') return false;\n      if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length != b.length) return false;\n        for (var i in a) {\n          if (a[i].key != b[i].key) {\n            return false;\n          }\n        }\n        return true;\n      }\n      if (a.key !== b.key) return false;\n      return true;\n    }\n  }, {\n    key: \"initDeck\",\n    value: function initDeck() {\n      if (typeof this.props.children === 'undefined') return;\n      var _this$props3 = this.props,\n        children = _this$props3.children,\n        loop = _this$props3.loop;\n      var cards = Array.isArray(children) ? children : [children];\n      var initialIndexA = this.props.initialIndex < cards.length ? this.props.initialIndex : 0;\n      var initialIndexB = loop ? this.mod(initialIndexA + 1, cards.length) : initialIndexA + 1;\n      var cardA = cards[initialIndexA] || null;\n      var cardB = cards[initialIndexB] || null;\n      this.setState({\n        cards: cards,\n        cardA: cardA,\n        cardB: cardB,\n        sindex: initialIndexB + 1\n      });\n    }\n  }, {\n    key: \"_resetCard\",\n    value: function _resetCard() {\n      Animated.timing(this.state.dragDistance, {\n        toValue: 0,\n        duration: this.props.duration,\n        useNativeDriver: this.props.useNativeDriver || false\n      }).start();\n      Animated.spring(this.state.drag, {\n        toValue: {\n          x: 0,\n          y: 0\n        },\n        duration: this.props.duration,\n        useNativeDriver: this.props.useNativeDriver || false\n      }).start();\n    }\n  }, {\n    key: \"goBackFromTop\",\n    value: function goBackFromTop() {\n      this._goBack('top');\n    }\n  }, {\n    key: \"goBackFromRight\",\n    value: function goBackFromRight() {\n      this._goBack('right');\n    }\n  }, {\n    key: \"goBackFromLeft\",\n    value: function goBackFromLeft() {\n      this._goBack('left');\n    }\n  }, {\n    key: \"goBackFromBottom\",\n    value: function goBackFromBottom() {\n      this._goBack('bottom');\n    }\n  }, {\n    key: \"mod\",\n    value: function mod(n, m) {\n      return (n % m + m) % m;\n    }\n  }, {\n    key: \"_goBack\",\n    value: function _goBack(direction) {\n      var _this2 = this;\n      var _this$state = this.state,\n        cards = _this$state.cards,\n        sindex = _this$state.sindex,\n        topCard = _this$state.topCard;\n      if (sindex - 3 < 0 && !this.props.loop) return;\n      var previusCardIndex = this.mod(sindex - 3, cards.length);\n      var update = {};\n      if (topCard === 'cardA') {\n        update = _objectSpread(_objectSpread({}, update), {}, {\n          cardB: cards[previusCardIndex]\n        });\n      } else {\n        update = _objectSpread(_objectSpread({}, update), {}, {\n          cardA: cards[previusCardIndex]\n        });\n      }\n      this.setState(_objectSpread(_objectSpread({}, update), {}, {\n        topCard: topCard === 'cardA' ? 'cardB' : 'cardA',\n        sindex: sindex - 1\n      }), function () {\n        switch (direction) {\n          case 'top':\n            _this2.state.drag.setValue({\n              x: 0,\n              y: -height\n            });\n            _this2.state.dragDistance.setValue(height);\n            break;\n          case 'left':\n            _this2.state.drag.setValue({\n              x: -width,\n              y: 0\n            });\n            _this2.state.dragDistance.setValue(width);\n            break;\n          case 'right':\n            _this2.state.drag.setValue({\n              x: width,\n              y: 0\n            });\n            _this2.state.dragDistance.setValue(width);\n            break;\n          case 'bottom':\n            _this2.state.drag.setValue({\n              x: 0,\n              y: height\n            });\n            _this2.state.dragDistance.setValue(width);\n            break;\n          default:\n        }\n        Animated.spring(_this2.state.dragDistance, {\n          toValue: 0,\n          duration: _this2.props.duration,\n          useNativeDriver: _this2.props.useNativeDriver || false\n        }).start();\n        Animated.spring(_this2.state.drag, {\n          toValue: {\n            x: 0,\n            y: 0\n          },\n          duration: _this2.props.duration,\n          useNativeDriver: _this2.props.useNativeDriver || false\n        }).start();\n      });\n    }\n  }, {\n    key: \"swipeTop\",\n    value: function swipeTop() {\n      var d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this._nextCard('top', 0, -height, d || this.props.duration);\n    }\n  }, {\n    key: \"swipeBottom\",\n    value: function swipeBottom() {\n      var d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this._nextCard('bottom', 0, height, d || this.props.duration);\n    }\n  }, {\n    key: \"swipeRight\",\n    value: function swipeRight() {\n      var d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this._nextCard('right', width * 1.5, 0, d || this.props.duration);\n    }\n  }, {\n    key: \"swipeLeft\",\n    value: function swipeLeft() {\n      var d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this._nextCard('left', -width * 1.5, 0, d || this.props.duration);\n    }\n  }, {\n    key: \"_nextCard\",\n    value: function _nextCard(direction, x, y) {\n      var _this3 = this;\n      var duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 400;\n      var _this$props4 = this.props,\n        verticalSwipe = _this$props4.verticalSwipe,\n        horizontalSwipe = _this$props4.horizontalSwipe,\n        loop = _this$props4.loop;\n      var _this$state2 = this.state,\n        sindex = _this$state2.sindex,\n        cards = _this$state2.cards,\n        topCard = _this$state2.topCard;\n      var nextCard = loop ? Math.abs(sindex) % cards.length : sindex;\n      var index = loop ? this.mod(nextCard - 2, cards.length) : nextCard - 2;\n      if (index === cards.length - 1) {\n        this.props.onSwipedAll();\n      }\n      if (sindex - 2 < cards.length || loop) {\n        Animated.spring(this.state.dragDistance, {\n          toValue: 220,\n          duration: duration,\n          useNativeDriver: this.props.useNativeDriver || false\n        }).start();\n        Animated.timing(this.state.drag, {\n          toValue: {\n            x: horizontalSwipe ? x : 0,\n            y: verticalSwipe ? y : 0\n          },\n          duration: duration,\n          useNativeDriver: this.props.useNativeDriver || false\n        }).start(function () {\n          var newTopCard = topCard === 'cardA' ? 'cardB' : 'cardA';\n          var update = {};\n          if (newTopCard === 'cardA') {\n            update = _objectSpread(_objectSpread({}, update), {}, {\n              cardB: cards[nextCard]\n            });\n          }\n          if (newTopCard === 'cardB') {\n            update = _objectSpread(_objectSpread({}, update), {}, {\n              cardA: cards[nextCard]\n            });\n          }\n          _this3.state.drag.setValue({\n            x: 0,\n            y: 0\n          });\n          _this3.state.dragDistance.setValue(0);\n          _this3.setState(_objectSpread(_objectSpread({}, update), {}, {\n            topCard: newTopCard,\n            sindex: nextCard + 1\n          }));\n          _this3.props.onSwiped(index);\n          switch (direction) {\n            case 'left':\n              _this3.props.onSwipedLeft(index);\n              if (_this3.state.cards[index] && _this3.state.cards[index].props.onSwipedLeft) _this3.state.cards[index] && _this3.state.cards[index].props.onSwipedLeft();\n              break;\n            case 'right':\n              _this3.props.onSwipedRight(index);\n              if (_this3.state.cards[index] && _this3.state.cards[index].props.onSwipedRight) _this3.state.cards[index].props.onSwipedRight();\n              break;\n            case 'top':\n              _this3.props.onSwipedTop(index);\n              if (_this3.state.cards[index] && _this3.state.cards[index].props.onSwipedTop) _this3.state.cards[index].props.onSwipedTop();\n              break;\n            case 'bottom':\n              _this3.props.onSwipedBottom(index);\n              if (_this3.state.cards[index] && _this3.state.cards[index].props.onSwipedBottom) _this3.state.cards[index].props.onSwipedBottom();\n              break;\n            default:\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_setPointerEvents\",\n    value: function _setPointerEvents(topCard, topCardName) {\n      return {\n        pointerEvents: topCard === topCardName ? \"auto\" : \"none\"\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n        secondCardZoom = _this$props5.secondCardZoom,\n        renderNoMoreCards = _this$props5.renderNoMoreCards;\n      var _this$state3 = this.state,\n        drag = _this$state3.drag,\n        dragDistance = _this$state3.dragDistance,\n        cardA = _this$state3.cardA,\n        cardB = _this$state3.cardB,\n        topCard = _this$state3.topCard,\n        sindex = _this$state3.sindex;\n      var scale = dragDistance.interpolate({\n        inputRange: [0, 10, 220],\n        outputRange: [secondCardZoom, secondCardZoom, 1],\n        extrapolate: 'clamp'\n      });\n      var rotate = drag.x.interpolate({\n        inputRange: [width * -1.5, 0, width * 1.5],\n        outputRange: this.props.outputRotationRange,\n        extrapolate: 'clamp'\n      });\n      return _jsxs(View, _objectSpread(_objectSpread({}, this._panResponder.panHandlers), {}, {\n        style: [{\n          position: 'relative'\n        }, this.props.style],\n        children: [renderNoMoreCards(), _jsx(Animated.View, _objectSpread(_objectSpread({}, this._setPointerEvents(topCard, 'cardB')), {}, {\n          style: [_objectSpread(_objectSpread({\n            position: 'absolute',\n            zIndex: topCard === 'cardB' ? 3 : 2\n          }, Platform.select({\n            android: {\n              elevation: topCard === 'cardB' ? 3 : 2\n            }\n          })), {}, {\n            transform: [{\n              rotate: topCard === 'cardB' ? rotate : '0deg'\n            }, {\n              translateX: topCard === 'cardB' ? drag.x : 0\n            }, {\n              translateY: topCard === 'cardB' ? drag.y : 0\n            }, {\n              scale: topCard === 'cardB' ? 1 : scale\n            }]\n          }), this.props.cardContainerStyle],\n          children: cardB\n        })), _jsx(Animated.View, _objectSpread(_objectSpread({}, this._setPointerEvents(topCard, 'cardA')), {}, {\n          style: [_objectSpread(_objectSpread({\n            position: 'absolute',\n            zIndex: topCard === 'cardA' ? 3 : 2\n          }, Platform.select({\n            android: {\n              elevation: topCard === 'cardA' ? 3 : 2\n            }\n          })), {}, {\n            transform: [{\n              rotate: topCard === 'cardA' ? rotate : '0deg'\n            }, {\n              translateX: topCard === 'cardA' ? drag.x : 0\n            }, {\n              translateY: topCard === 'cardA' ? drag.y : 0\n            }, {\n              scale: topCard === 'cardA' ? 1 : scale\n            }]\n          }), this.props.cardContainerStyle],\n          children: cardA\n        }))]\n      }));\n    }\n  }], [{\n    key: \"distance\",\n    value: function distance(x, y) {\n      return Math.hypot(x, y);\n    }\n  }]);\n  return CardStack;\n}(Component);\nCardStack.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  style: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  cardContainerStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  secondCardZoom: PropTypes.number,\n  loop: PropTypes.bool,\n  initialIndex: PropTypes.number,\n  renderNoMoreCards: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  onSwipeStart: PropTypes.func,\n  onSwipeEnd: PropTypes.func,\n  onSwiped: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  onSwipedRight: PropTypes.func,\n  onSwipedTop: PropTypes.func,\n  onSwipedBottom: PropTypes.func,\n  onSwiped: PropTypes.func,\n  onSwipedAll: PropTypes.func,\n  onSwipe: PropTypes.func,\n  disableBottomSwipe: PropTypes.bool,\n  disableLeftSwipe: PropTypes.bool,\n  disableRightSwipe: PropTypes.bool,\n  disableTopSwipe: PropTypes.bool,\n  verticalSwipe: PropTypes.bool,\n  verticalThreshold: PropTypes.number,\n  horizontalSwipe: PropTypes.bool,\n  horizontalThreshold: PropTypes.number,\n  outputRotationRange: PropTypes.array,\n  duration: PropTypes.number\n};\nCardStack.defaultProps = {\n  style: {},\n  cardContainerStyle: {},\n  secondCardZoom: 0.95,\n  loop: false,\n  initialIndex: 0,\n  renderNoMoreCards: function renderNoMoreCards() {\n    return _jsx(Text, {\n      children: \"No More Cards\"\n    });\n  },\n  onSwipeStart: function onSwipeStart() {\n    return null;\n  },\n  onSwipeEnd: function onSwipeEnd() {\n    return null;\n  },\n  onSwiped: function onSwiped() {},\n  onSwipedLeft: function onSwipedLeft() {},\n  onSwipedRight: function onSwipedRight() {},\n  onSwipedTop: function onSwipedTop() {},\n  onSwipedBottom: function onSwipedBottom() {},\n  onSwipedAll: function () {\n    var _onSwipedAll = _asyncToGenerator(function* () {});\n    function onSwipedAll() {\n      return _onSwipedAll.apply(this, arguments);\n    }\n    return onSwipedAll;\n  }(),\n  onSwipe: function onSwipe() {},\n  disableBottomSwipe: false,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  disableTopSwipe: false,\n  verticalSwipe: true,\n  verticalThreshold: height / 4,\n  horizontalSwipe: true,\n  horizontalThreshold: width / 2,\n  outputRotationRange: ['-15deg', '0deg', '15deg'],\n  duration: 300\n};\npolyfill(CardStack);\nexport default CardStack;","map":{"version":3,"names":["React","Component","PropTypes","polyfill","Dimensions","get","height","width","CardStack","props","state","drag","Animated","ValueXY","x","y","dragDistance","Value","sindex","cardA","cardB","topCard","cards","touchStart","distance","constructor","_panResponder","PanResponder","create","onStartShouldSetPanResponder","evt","gestureState","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","isVerticalSwipe","Math","sqrt","pow","dx","dy","verticalSwipe","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onSwipeStart","setState","Date","getTime","onPanResponderMove","movedX","moveX","x0","movedY","moveY","y0","onSwipe","horizontalSwipe","setValue","onPanResponderTerminationRequest","onPanResponderRelease","onSwipeEnd","currentTime","swipeDuration","verticalThreshold","horizontalThreshold","disableTopSwipe","disableLeftSwipe","disableRightSwipe","disableBottomSwipe","abs","swipeDirection","_nextCard","duration","_resetCard","onPanResponderTerminate","onShouldBlockNativeResponder","prevProps","children","_isSameChildren","Array","isArray","aIndex","_getIndex","length","bIndex","index","loop","mod","initDeck","a","b","i","key","initialIndexA","initialIndex","initialIndexB","timing","toValue","useNativeDriver","start","spring","_goBack","n","m","direction","previusCardIndex","update","d","nextCard","onSwipedAll","newTopCard","onSwiped","onSwipedLeft","onSwipedRight","onSwipedTop","onSwipedBottom","topCardName","pointerEvents","secondCardZoom","renderNoMoreCards","scale","interpolate","inputRange","outputRange","extrapolate","rotate","outputRotationRange","panHandlers","position","style","_setPointerEvents","zIndex","Platform","select","android","elevation","transform","translateX","translateY","cardContainerStyle","hypot","propTypes","oneOfType","array","object","isRequired","number","bool","func","element","defaultProps"],"sources":["/Users/artemgazizov/native-meet2coffee/node_modules/react-native-card-stack-swiper/CardStack.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport { polyfill } from 'react-lifecycles-compat';\nimport {\n  View,\n  Animated,\n  PanResponder,\n  Dimensions,\n  Text,\n  Platform\n} from 'react-native';\n\nconst { height, width } = Dimensions.get('window');\n\nclass CardStack extends Component {\n\n  static distance(x, y) {\n    return Math.hypot(x, y);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      drag: new Animated.ValueXY({ x: 0, y: 0 }),\n      dragDistance: new Animated.Value(0),\n      sindex: 0, // index to the next card to be renderd mod card.length\n      cardA: null,\n      cardB: null,\n      topCard: 'cardA',\n      cards: [],\n      touchStart: 0,\n    };\n    this.distance = this.constructor.distance;\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: (evt, gestureState) => false,\n      onStartShouldSetPanResponderCapture: (evt, gestureState) => false,\n      onMoveShouldSetPanResponder: (evt, gestureState) => {\n        const isVerticalSwipe = Math.sqrt(\n          Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2)\n        )\n        if (!this.props.verticalSwipe && isVerticalSwipe) {\n          return false\n        }\n        return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10\n      },\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => {\n        const isVerticalSwipe = Math.sqrt(\n          Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2)\n        )\n        if (!this.props.verticalSwipe && isVerticalSwipe) {\n          return false\n        }\n        return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10\n      },\n      onPanResponderGrant: (evt, gestureState) => {\n        this.props.onSwipeStart();\n        this.setState({ touchStart: new Date().getTime() });\n      },\n      onPanResponderMove: (evt, gestureState) => {\n        const movedX = gestureState.moveX - gestureState.x0;\n        const movedY = gestureState.moveY - gestureState.y0;\n        this.props.onSwipe(movedX, movedY);\n        const { verticalSwipe, horizontalSwipe } = this.props;\n        const dragDistance = this.distance((horizontalSwipe) ? gestureState.dx : 0, (verticalSwipe) ? gestureState.dy : 0);\n        this.state.dragDistance.setValue(dragDistance);\n        this.state.drag.setValue({ x: (horizontalSwipe) ? gestureState.dx : 0, y: (verticalSwipe) ? gestureState.dy : 0 });\n      },\n      onPanResponderTerminationRequest: (evt, gestureState) => true,\n      onPanResponderRelease: (evt, gestureState) => {\n        this.props.onSwipeEnd();\n        const currentTime = new Date().getTime();\n        const swipeDuration = currentTime - this.state.touchStart;\n        const {\n          verticalThreshold,\n          horizontalThreshold,\n          disableTopSwipe,\n          disableLeftSwipe,\n          disableRightSwipe,\n          disableBottomSwipe,\n        } = this.props;\n\n        if (((Math.abs(gestureState.dx) > horizontalThreshold) ||\n          (Math.abs(gestureState.dx) > horizontalThreshold * 0.6 &&\n            swipeDuration < 150)\n        ) && this.props.horizontalSwipe) {\n\n          const swipeDirection = (gestureState.dx < 0) ? width * -1.5 : width * 1.5;\n          if (swipeDirection < 0 && !disableLeftSwipe) {\n            this._nextCard('left', swipeDirection, gestureState.dy, this.props.duration);\n          }\n          else if (swipeDirection > 0 && !disableRightSwipe) {\n            this._nextCard('right', swipeDirection, gestureState.dy, this.props.duration);\n          }\n          else {\n            this._resetCard();\n          }\n        } else if (((Math.abs(gestureState.dy) > verticalThreshold) ||\n          (Math.abs(gestureState.dy) > verticalThreshold * 0.8 &&\n            swipeDuration < 150)\n        ) && this.props.verticalSwipe) {\n\n          const swipeDirection = (gestureState.dy < 0) ? height * -1 : height;\n          if (swipeDirection < 0 && !disableTopSwipe) {\n\n            this._nextCard('top', gestureState.dx, swipeDirection, this.props.duration);\n          }\n          else if (swipeDirection > 0 && !disableBottomSwipe) {\n            this._nextCard('bottom', gestureState.dx, swipeDirection, this.props.duration);\n          }\n          else {\n            this._resetCard();\n          }\n        }\n        else {\n          this._resetCard();\n        }\n      },\n      onPanResponderTerminate: (evt, gestureState) => {\n      },\n      onShouldBlockNativeResponder: (evt, gestureState) => {\n        return true;\n      },\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (typeof this.props.children === 'undefined') return;\n    if (!this._isSameChildren(this.props.children, prevProps.children)) {\n      const children = Array.isArray(this.props.children) ? this.props.children : [this.props.children];\n      let aIndex = (this.state.topCard == 'cardA') ?\n        this._getIndex(this.state.sindex - 2, children.length) :\n        this._getIndex(this.state.sindex - 1, children.length);\n      let bIndex = (this.state.topCard == 'cardB') ?\n        this._getIndex(this.state.sindex - 2, children.length) :\n        this._getIndex(this.state.sindex - 1, children.length);\n      this.setState({\n        cards: children,\n        cardA: children[aIndex] || null,\n        cardB: children[bIndex] || null\n      });\n    }\n  }\n\n  _getIndex(index, cards){\n    return this.props.loop ? \n      this.mod(index, cards):\n      index;\n  }\n\n  componentDidMount() {\n    this.initDeck();\n  }\n\n  _isSameChildren(a, b) {\n    if (typeof a != typeof b) return false;\n    if (typeof a === 'undefined') return false;\n    if (Array.isArray(a) && Array.isArray(b)) {\n      if (a.length != b.length) return false;\n      for (let i in a) {\n        if (a[i].key != b[i].key) { return false }\n      }\n      return true;\n    }\n    if (a.key !== b.key) return false;\n\n    return true\n  }\n\n  initDeck() {\n    if (typeof this.props.children === 'undefined') return;\n    const { children, loop } = this.props;\n    const cards = Array.isArray(children) ? children : [children];\n    const initialIndexA = this.props.initialIndex < cards.length ? this.props.initialIndex : 0;\n    const initialIndexB = loop ? this.mod(initialIndexA + 1, cards.length) : initialIndexA + 1;\n    const cardA = cards[initialIndexA] || null;\n    const cardB = cards[initialIndexB] || null;\n    this.setState({\n      cards,\n      cardA,\n      cardB,\n      sindex: initialIndexB + 1,\n    });\n  }\n\n  _resetCard() {\n    Animated.timing(\n      this.state.dragDistance,\n      {\n        toValue: 0,\n        duration: this.props.duration,\n        useNativeDriver: this.props.useNativeDriver || false,\n      }\n    ).start();\n    Animated.spring(\n      this.state.drag,\n      {\n        toValue: { x: 0, y: 0 },\n        duration: this.props.duration,\n        useNativeDriver: this.props.useNativeDriver || false,\n      }\n    ).start();\n  }\n\n  goBackFromTop() {\n    this._goBack('top');\n  }\n\n  goBackFromRight() {\n    this._goBack('right');\n  }\n\n  goBackFromLeft() {\n    this._goBack('left');\n  }\n\n  goBackFromBottom() {\n    this._goBack('bottom');\n  }\n\n  mod(n, m) {\n    return ((n % m) + m) % m;\n  }\n\n  _goBack(direction) {\n    const { cards, sindex, topCard } = this.state;\n\n    if ((sindex - 3) < 0 && !this.props.loop) return;\n\n    const previusCardIndex = this.mod(sindex - 3, cards.length)\n    let update = {};\n    if (topCard === 'cardA') {\n      update = {\n        ...update,\n        cardB: cards[previusCardIndex]\n\n      }\n    } else {\n      update = {\n        ...update,\n        cardA: cards[previusCardIndex],\n      }\n    }\n\n    this.setState({\n      ...update,\n      topCard: (topCard === 'cardA') ? 'cardB' : 'cardA',\n      sindex: sindex - 1\n    }, () => {\n\n      switch (direction) {\n        case 'top':\n          this.state.drag.setValue({ x: 0, y: -height });\n          this.state.dragDistance.setValue(height);\n          break;\n        case 'left':\n          this.state.drag.setValue({ x: -width, y: 0 });\n          this.state.dragDistance.setValue(width);\n          break;\n        case 'right':\n          this.state.drag.setValue({ x: width, y: 0 });\n          this.state.dragDistance.setValue(width);\n          break;\n        case 'bottom':\n          this.state.drag.setValue({ x: 0, y: height });\n          this.state.dragDistance.setValue(width);\n          break;\n        default:\n\n      }\n\n      Animated.spring(\n        this.state.dragDistance,\n        {\n          toValue: 0,\n          duration: this.props.duration,\n          useNativeDriver: this.props.useNativeDriver || false,\n        }\n      ).start();\n\n      Animated.spring(\n        this.state.drag,\n        {\n          toValue: { x: 0, y: 0 },\n          duration: this.props.duration,\n          useNativeDriver: this.props.useNativeDriver || false,\n        }\n      ).start();\n    })\n  }\n\n  swipeTop(d = null) {\n    this._nextCard('top', 0, -height, d || this.props.duration);\n  }\n\n  swipeBottom(d = null) {\n    this._nextCard('bottom', 0, height, d || this.props.duration);\n  }\n\n  swipeRight(d = null) {\n    this._nextCard('right', width * 1.5, 0, d || this.props.duration);\n  }\n\n  swipeLeft(d = null) {\n    this._nextCard('left', -width * 1.5, 0, d || this.props.duration);\n  }\n\n  _nextCard(direction, x, y, duration = 400) {\n    const { verticalSwipe, horizontalSwipe, loop } = this.props;\n    const { sindex, cards, topCard } = this.state;\n\n    // index for the next card to be renderd\n    const nextCard = (loop) ? (Math.abs(sindex) % cards.length) : sindex;\n\n    // index of the swiped card\n    const index = (loop) ? this.mod(nextCard - 2, cards.length) : nextCard - 2;\n\n    if (index === cards.length - 1) {\n      this.props.onSwipedAll();\n    }\n\n    if ((sindex - 2 < cards.length) || (loop)) {\n      Animated.spring(\n        this.state.dragDistance,\n        {\n          toValue: 220,\n          duration,\n          useNativeDriver: this.props.useNativeDriver || false,\n        }\n      ).start();\n\n      Animated.timing(\n        this.state.drag,\n        {\n          toValue: { x: (horizontalSwipe) ? x : 0, y: (verticalSwipe) ? y : 0 },\n          duration,\n          useNativeDriver: this.props.useNativeDriver || false,\n        }\n      ).start(() => {\n\n        const newTopCard = (topCard === 'cardA') ? 'cardB' : 'cardA';\n\n        let update = {};\n        if (newTopCard === 'cardA') {\n          update = {\n            ...update,\n            cardB: cards[nextCard]\n          };\n        }\n        if (newTopCard === 'cardB') {\n          update = {\n            ...update,\n            cardA: cards[nextCard],\n          };\n        }\n        this.state.drag.setValue({ x: 0, y: 0 });\n        this.state.dragDistance.setValue(0);\n        this.setState({\n          ...update,\n          topCard: newTopCard,\n          sindex: nextCard + 1\n        });\n\n        this.props.onSwiped(index);\n        switch (direction) {\n          case 'left':\n            this.props.onSwipedLeft(index);\n            if (this.state.cards[index] && this.state.cards[index].props.onSwipedLeft)\n              this.state.cards[index] && this.state.cards[index].props.onSwipedLeft();\n            break;\n          case 'right':\n            this.props.onSwipedRight(index);\n            if (this.state.cards[index] && this.state.cards[index].props.onSwipedRight)\n              this.state.cards[index].props.onSwipedRight();\n            break;\n          case 'top':\n            this.props.onSwipedTop(index);\n            if (this.state.cards[index] && this.state.cards[index].props.onSwipedTop)\n              this.state.cards[index].props.onSwipedTop();\n            break;\n          case 'bottom':\n            this.props.onSwipedBottom(index);\n            if (this.state.cards[index] && this.state.cards[index].props.onSwipedBottom)\n              this.state.cards[index].props.onSwipedBottom();\n            break;\n          default:\n        }\n      });\n\n    }\n  }\n\n\n  /**\n   * @description CardB’s click feature is trigger the CardA on the card stack. (Solved on Android)\n   * @see https://facebook.github.io/react-native/docs/view#pointerevents\n   */\n  _setPointerEvents(topCard, topCardName) {\n    return { pointerEvents: topCard === topCardName ? \"auto\" : \"none\" }\n  }\n\n  render() {\n\n    const { secondCardZoom, renderNoMoreCards } = this.props;\n    const { drag, dragDistance, cardA, cardB, topCard, sindex } = this.state;\n\n    const scale = dragDistance.interpolate({\n      inputRange: [0, 10, 220],\n      outputRange: [secondCardZoom, secondCardZoom, 1],\n      extrapolate: 'clamp',\n    });\n    const rotate = drag.x.interpolate({\n      inputRange: [width * -1.5, 0, width * 1.5],\n      outputRange: this.props.outputRotationRange,\n      extrapolate: 'clamp',\n    });\n\n    return (\n      <View {...this._panResponder.panHandlers} style={[{ position: 'relative' }, this.props.style]}>\n\n        {renderNoMoreCards()}\n\n        <Animated.View\n          {...this._setPointerEvents(topCard, 'cardB')}\n          style={[{\n            position: 'absolute',\n            zIndex: (topCard === 'cardB') ? 3 : 2,\n            ...Platform.select({\n              android: {\n                elevation: (topCard === 'cardB') ? 3 : 2,\n              }\n            }),\n            transform: [\n              { rotate: (topCard === 'cardB') ? rotate : '0deg' },\n              { translateX: (topCard === 'cardB') ? drag.x : 0 },\n              { translateY: (topCard === 'cardB') ? drag.y : 0 },\n              { scale: (topCard === 'cardB') ? 1 : scale },\n            ]\n          }, this.props.cardContainerStyle]}>\n          {cardB}\n        </Animated.View>\n        <Animated.View\n          {...this._setPointerEvents(topCard, 'cardA')}\n          style={[{\n            position: 'absolute',\n            zIndex: (topCard === 'cardA') ? 3 : 2,\n            ...Platform.select({\n              android: {\n                elevation: (topCard === 'cardA') ? 3 : 2,\n              }\n            }),\n            transform: [\n              { rotate: (topCard === 'cardA') ? rotate : '0deg' },\n              { translateX: (topCard === 'cardA') ? drag.x : 0 },\n              { translateY: (topCard === 'cardA') ? drag.y : 0 },\n              { scale: (topCard === 'cardA') ? 1 : scale },\n            ]\n          }, this.props.cardContainerStyle]}>\n          {cardA}\n        </Animated.View>\n\n      </View>\n    );\n  }\n}\n\nCardStack.propTypes = {\n\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n\n  style: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  cardContainerStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  secondCardZoom: PropTypes.number,\n  loop: PropTypes.bool,\n  initialIndex: PropTypes.number,\n  renderNoMoreCards: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  onSwipeStart: PropTypes.func,\n  onSwipeEnd: PropTypes.func,\n  onSwiped: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  onSwipedRight: PropTypes.func,\n  onSwipedTop: PropTypes.func,\n  onSwipedBottom: PropTypes.func,\n  onSwiped: PropTypes.func,\n  onSwipedAll: PropTypes.func,\n  onSwipe: PropTypes.func,\n\n  disableBottomSwipe: PropTypes.bool,\n  disableLeftSwipe: PropTypes.bool,\n  disableRightSwipe: PropTypes.bool,\n  disableTopSwipe: PropTypes.bool,\n  verticalSwipe: PropTypes.bool,\n  verticalThreshold: PropTypes.number,\n\n  horizontalSwipe: PropTypes.bool,\n  horizontalThreshold: PropTypes.number,\n  outputRotationRange: PropTypes.array,\n  duration: PropTypes.number\n}\n\nCardStack.defaultProps = {\n\n  style: {},\n  cardContainerStyle: {},\n  secondCardZoom: 0.95,\n  loop: false,\n  initialIndex: 0,\n  renderNoMoreCards: () => { return (<Text>No More Cards</Text>) },\n  onSwipeStart: () => null,\n  onSwipeEnd: () => null,\n  onSwiped: () => { },\n  onSwipedLeft: () => { },\n  onSwipedRight: () => { },\n  onSwipedTop: () => { },\n  onSwipedBottom: () => { },\n  onSwipedAll: async () => { },\n  onSwipe: () => { },\n\n  disableBottomSwipe: false,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  disableTopSwipe: false,\n  verticalSwipe: true,\n  verticalThreshold: height / 4,\n  horizontalSwipe: true,\n  horizontalThreshold: width / 2,\n  outputRotationRange: ['-15deg', '0deg', '15deg'],\n  duration: 300\n}\npolyfill(CardStack);\nexport default CardStack;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}