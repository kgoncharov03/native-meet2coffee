{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport default function useIsKeyboardShown() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isKeyboardShown = _React$useState2[0],\n    setIsKeyboardShown = _React$useState2[1];\n  React.useEffect(function () {\n    var handleKeyboardShow = function handleKeyboardShow() {\n      return setIsKeyboardShown(true);\n    };\n    var handleKeyboardHide = function handleKeyboardHide() {\n      return setIsKeyboardShown(false);\n    };\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n    return function () {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, []);\n  return isKeyboardShown;\n}","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAGA,eAAe,SAASC,kBAAT,GAA8B;EAC3C,sBAA8CD,KAAK,CAACE,QAAN,CAAe,KAAf,CAA9C;IAAA;IAAOC,eAAD;IAAkBC,kBAAlB;EAENJ,KAAK,CAACK,SAAN,CAAgB,YAAM;IACpB,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB;MAAA,OAASF,kBAAkB,CAAC,IAAD,CAAnD;IAAA;IACA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkB;MAAA,OAASH,kBAAkB,CAAC,KAAD,CAAnD;IAAA;IAEA,IAAII,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;MACzBC,QAAQ,CAACC,WAAT,CAAqB,kBAArB,EAAyCL,kBAAzC;MACAI,QAAQ,CAACC,WAAT,CAAqB,kBAArB,EAAyCJ,kBAAzC;IACD,CAHD,MAGO;MACLG,QAAQ,CAACC,WAAT,CAAqB,iBAArB,EAAwCL,kBAAxC;MACAI,QAAQ,CAACC,WAAT,CAAqB,iBAArB,EAAwCJ,kBAAxC;IACD;IAED,OAAO,YAAM;MACX,IAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;QACzBC,QAAQ,CAACE,cAAT,CAAwB,kBAAxB,EAA4CN,kBAA5C;QACAI,QAAQ,CAACE,cAAT,CAAwB,kBAAxB,EAA4CL,kBAA5C;MACD,CAHD,MAGO;QACLG,QAAQ,CAACE,cAAT,CAAwB,iBAAxB,EAA2CN,kBAA3C;QACAI,QAAQ,CAACE,cAAT,CAAwB,iBAAxB,EAA2CL,kBAA3C;MACD;IACF,CARD;EASD,CArBD,EAqBG,EArBH;EAuBA,OAAOJ,eAAP;AACD","names":["React","useIsKeyboardShown","useState","isKeyboardShown","setIsKeyboardShown","useEffect","handleKeyboardShow","handleKeyboardHide","Platform","OS","Keyboard","addListener","removeListener"],"sources":["useIsKeyboardShown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, []);\n\n  return isKeyboardShown;\n}\n"]},"metadata":{},"sourceType":"module"}