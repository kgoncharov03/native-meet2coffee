{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useContext, useState } from 'react';\nimport Screen from \"../components/Screen\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport AppButton from \"../components/AppButton\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport AppFormField from \"../components/AppFormField\";\nimport SubmitButton from \"../components/SubmitButton\";\nimport authApi from \"../api/auth\";\nimport jwtDecode from 'jwt-decode';\nimport MD5 from 'crypto-js/md5';\nimport AuthContext from \"../auth/context\";\nimport authStorage from \"../auth/storage\";\nimport apiClient from \"../api/client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validationSchema = Yup.object().shape({\n  email: Yup.string().required().email().label('Email'),\n  password: Yup.string().required().min(4).label('Password')\n});\nexport default function LoginScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loginFailed = _useState2[0],\n    setLoginFailed = _useState2[1];\n  var authContext = useContext(AuthContext);\n  var handleSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* (_ref) {\n      var email = _ref.email,\n        password = _ref.password;\n      var result = yield authApi.login(email, MD5(password).toString());\n      if (!result.ok) return setLoginFailed(true);\n      authContext.setUser(result.data['token']);\n      authStorage.storeToken(result.data['token']);\n      console.log('LOGIN SELF TOKEN', result.data['token']);\n      setLoginFailed(false);\n    });\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(Screen, {\n    style: styles.container,\n    children: [loginFailed && _jsx(Text, {\n      children: \"Wrong Email or Password\"\n    }), _jsx(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      onSubmit: handleSubmit,\n      validationSchema: validationSchema,\n      children: function children() {\n        return _jsxs(_Fragment, {\n          children: [_jsx(AppFormField, {\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            autoCorrect: false,\n            icon: \"email\",\n            placeholder: \"Email\",\n            textContentType: \"emailAddress\",\n            name: \"email\"\n          }), _jsx(AppFormField, {\n            autoCapitalize: \"none\",\n            autoCorrect: false,\n            icon: \"lock\",\n            placeholder: \"Password\",\n            textContentType: \"password\",\n            secureTextEntry: false,\n            name: \"password\"\n          }), _jsx(SubmitButton, {\n            title1: \"login\"\n          })]\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    alignSelf: 'center',\n    marginTop: 50,\n    marginBottom: 20\n  }\n});","map":{"version":3,"names":["React","useContext","useState","Screen","AppTextInput","AppButton","Formik","Yup","AppFormField","SubmitButton","authApi","jwtDecode","MD5","AuthContext","authStorage","apiClient","validationSchema","object","shape","email","string","required","label","password","min","LoginScreen","loginFailed","setLoginFailed","authContext","handleSubmit","result","login","toString","ok","setUser","data","storeToken","console","log","styles","container","StyleSheet","create","padding","logo","width","height","alignSelf","marginTop","marginBottom"],"sources":["/Users/artemgazizov/native-meet2coffee/screens/LoginScreen.js"],"sourcesContent":["import { StyleSheet, Text, View, Image } from 'react-native';\nimport React, { useContext, useState } from 'react';\nimport Screen from '../components/Screen';\nimport AppTextInput from '../components/AppTextInput';\nimport AppButton from '../components/AppButton';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport AppFormField from '../components/AppFormField';\nimport SubmitButton from '../components/SubmitButton';\nimport authApi from '../api/auth';\nimport jwtDecode from 'jwt-decode';\nimport MD5 from 'crypto-js/md5';\n\nimport AuthContext from '../auth/context';\nimport authStorage from '../auth/storage';\nimport apiClient from '../api/client';\n\nconst validationSchema = Yup.object().shape({\n    email: Yup.string().required().email().label('Email'),\n\n    password: Yup.string().required().min(4).label('Password'),\n});\n\nexport default function LoginScreen() {\n    const [loginFailed, setLoginFailed] = useState(false);\n    const authContext = useContext(AuthContext);\n\n    const handleSubmit = async ({ email, password }) => {\n        const result = await authApi.login(email, MD5(password).toString());\n\n        if (!result.ok) return setLoginFailed(true);\n\n        authContext.setUser(result.data['token']);\n\n        authStorage.storeToken(result.data['token']);\n\n        console.log('LOGIN SELF TOKEN', result.data['token']);\n        setLoginFailed(false);\n    };\n\n    return (\n        <Screen style={styles.container}>\n            {loginFailed && <Text>Wrong Email or Password</Text>}\n\n            <Formik\n                initialValues={{ email: '', password: '' }}\n                onSubmit={handleSubmit}\n                validationSchema={validationSchema}\n            >\n                {() => (\n                    <>\n                        <AppFormField\n                            keyboardType='email-address'\n                            autoCapitalize='none'\n                            autoCorrect={false}\n                            icon='email'\n                            placeholder='Email'\n                            textContentType='emailAddress'\n                            name='email'\n                        />\n\n                        <AppFormField\n                            autoCapitalize='none'\n                            autoCorrect={false}\n                            icon='lock'\n                            placeholder='Password'\n                            textContentType='password'\n                            secureTextEntry={false}\n                            name='password'\n                        />\n\n                        <SubmitButton title1='login' />\n                    </>\n                )}\n            </Formik>\n        </Screen>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: 10,\n    },\n    logo: {\n        width: 80,\n        height: 80,\n        alignSelf: 'center',\n        marginTop: 50,\n        marginBottom: 20,\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}